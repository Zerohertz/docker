name: CI

on:
  push:
    branches:
      - main
    paths:
      - "airflow-*/**"
      - "dev/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed directories
        id: set-matrix
        run: |
          CHANGED_DIRS=()
          for path in airflow-* dev; do
            if git diff --name-only HEAD^ HEAD | grep -qE "^$path/"; then
              CHANGED_DIRS+=("$path")
            fi
          done
          echo "matrix=$(echo ${CHANGED_DIRS[@]} | jq -Rc 'split(" ")')" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '[]'
    name: ${{ matrix.directory }} (build & push)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine new tag
        id: new-tag
        run: |
          apiResponse=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/${{ matrix.directory }}/tags/?page_size=100")
          if echo "$apiResponse" | grep -q "httperror 404"; then
            newTag="v1.0.0"
          else
            currentTag=$(echo "$apiResponse" | jq -r '.results[].name' | sort -V | grep v | tail -n 1)
            version=$(echo "$currentTag" | sed 's/[^0-9.]//g')
            IFS='.' read -r major minor patch <<< "$version"
            newTag="v${major}.${minor}.$((patch + 1))"
          fi
          echo "new_tag=$newTag" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.directory }}
          push: true
          # platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.directory }}:latest,
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.directory }}:${{ env.new_tag }},
            ghcr.io/${{ secrets.GH_USERNAME }}/${{ matrix.directory }}:latest,
            ghcr.io/${{ secrets.GH_USERNAME }}/${{ matrix.directory }}:${{ env.new_tag }}

      - name: Slack webhook
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: docker
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_CHECK }}
        if: always()
